{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bic\\\\Desktop\\\\CODE\\\\UDEMY_REACT_COURSE\\\\projeto1\\\\01-starting-project\\\\src\\\\App.js\";\nimport Header from \"./Componentes/Header\";\nimport ResultTables from \"./Componentes/ResultTables\";\nimport UserInput from \"./Componentes/UserInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const handleYearlyData = yearlyData => {\n    let dataTable = yearlyData;\n    return dataTable;\n  };\n  const calculateHandler = userInput => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput[\"CurrentSaving\"]; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput[\"YearlySaving\"]; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput[\"ExpectedInterest\"] / 100;\n    const duration = +userInput[\"InvestimentDuration\"];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n\n    //descobrir como passaar os vaalores do yearlydata para a result table\n    // do something with yearlyData ...\n    handleYearlyData(yearlyData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserInput, {\n      calculateHandler: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResultTables, {\n      dataTable: handleYearlyData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","ResultTables","UserInput","jsxDEV","_jsxDEV","App","handleYearlyData","yearlyData","dataTable","calculateHandler","userInput","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Bic/Desktop/CODE/UDEMY_REACT_COURSE/projeto1/01-starting-project/src/App.js"],"sourcesContent":["import Header from \"./Componentes/Header\";\nimport ResultTables from \"./Componentes/ResultTables\";\nimport UserInput from \"./Componentes/UserInput\";\n\nfunction App() {\n  const handleYearlyData = (yearlyData) => {\n    let dataTable = yearlyData;\n    return dataTable;\n  };\n\n  const calculateHandler = (userInput) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput[\"CurrentSaving\"]; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput[\"YearlySaving\"]; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput[\"ExpectedInterest\"] / 100;\n    const duration = +userInput[\"InvestimentDuration\"];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n\n    //descobrir como passaar os vaalores do yearlydata para a result table\n    // do something with yearlyData ...\n    handleYearlyData(yearlyData);\n  };\n\n  return (\n    <div>\n      <Header />\n      <UserInput calculateHandler={calculateHandler} />\n      <ResultTables dataTable={handleYearlyData} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,gBAAgB,GAAIC,UAAU,IAAK;IACvC,IAAIC,SAAS,GAAGD,UAAU;IAC1B,OAAOC,SAAS;EAClB,CAAC;EAED,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;IACtC;IACA;;IAEA,MAAMH,UAAU,GAAG,EAAE,CAAC,CAAC;;IAEvB,IAAII,cAAc,GAAG,CAACD,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;IAClD,MAAME,kBAAkB,GAAG,CAACF,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;IACvD,MAAMG,cAAc,GAAG,CAACH,SAAS,CAAC,kBAAkB,CAAC,GAAG,GAAG;IAC3D,MAAMI,QAAQ,GAAG,CAACJ,SAAS,CAAC,qBAAqB,CAAC;;IAElD;IACA,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MACjC,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDL,UAAU,CAACU,IAAI,CAAC;QACd;QACAC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACtB,CAAC,CAAC;IACJ;;IAEA;IACA;IACAN,gBAAgB,CAACC,UAAU,CAAC;EAC9B,CAAC;EAED,oBACEH,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACJ,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVpB,OAAA,CAACF,SAAS;MAACO,gBAAgB,EAAEA;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDpB,OAAA,CAACH,YAAY;MAACO,SAAS,EAAEF;IAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAACC,EAAA,GA1CQpB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}